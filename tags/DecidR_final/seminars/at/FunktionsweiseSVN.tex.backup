\subsection{Funktionsweise des SVN und Tools}

Im vorigen Unterkapitel wurde erläutert, wie das SVN funktioniert. In diesem Unterkapitel wird erklärt was für Funktionalitäten SVN bietet, bzw. wie man mit SVN arbeitet. Anschließend werden Tools für die Arbeit mit SVN aufgelistet. Bei den Befehlen bezieht sich die angegeben Adresse auf das SVN-Repository vom Studienprojekt \glqq DecidR\grqq.

Nachdem das SVN Repository auf einem Server angelegt und die Ordnerstruktur gewählt wurde, muss der Entwickler die gleiche Ordnerstruktur auf sein OS herstellen. Dazu bietet SVN einen Befehl an:
\begin{verbatim}
 svn checkout http://decidr.googlecode.com/svn/trunk/ decidr
\end{verbatim}
Dieser Befehl berechtigt den Entwickler nur das Lesen der Ordnerstruktur. Falls man selber Dateien hochladen oder Änderungen vornehmen möchte, muss das Checkout verschlüsselt passieren:
\begin{verbatim}
 svn checkout https://decidr.googlecode.com/svn/trunk/ 
 decidr --username username
\end{verbatim}
Man muss dabei seinen Benutzernamen und sein Passwort eingeben, erst dann erfolgt der Checkout in den Ordner, den man nach der Repository-Adresse angegeben hat. Beim ersten checkout wird in dem Ordner eine .svn Datei erstellt, in der die kompletten Daten des SVN-Repositorys stehen.

Sämtliche Updates auf dem Repository kann mit dem Update-Befehl auf sein OS holen:
\begin{verbatim}
 svn update decidr
\end{verbatim}
Dabei reicht es, wenn man den Ordner angibt der erneuert werden soll. Dieser muss aber die .svn Datei erhalten.

Falls man neue Dateien in das Repository laden möchte, muss man zunächst die Dateien vormerken. Dies geschieht mit:
\begin{verbatim}
 svn add file
\end{verbatim}
Daraufhin muss dem Repository noch mitgeteilt werden, dass die markierten Dateien nun hochgeladen und ins Repository aufgenommen werden sollen:
\begin{verbatim}
 svn commit decidr
\end{verbatim}
Beim commit ist es üblich, dass man noch Kommentare mitschreibt, zum besseren Verständnis was sich geändert hat. Das erreicht man mit dem Parameter -m \glqq Kommentar\grqq. 

\vspace{1cm}

\textbf{Tools für SVN}

Für SVN gibt es eine Reihe von Tools. Hier werden welche für MacOS, Windows, Linux und plattformunabhängige Systeme vorgestellt.
Plattformunabhängige Tools sind Tools, die auf jeder Plattform benutzt werden können. Im Studienprojekt benutzen wir das plattformunabhängige Tool smartSVN. Wir haben dieses Tools ausgewählt, damit wir ein einheitliches Tool besitzen, da unsere Teammitglieder mit Windows, Linux und MacOS arbeiten:
\begin{itemize}
 \item rapidSVN \cite{rapidSVN}
 \item subcommander \cite{subcommander}
 \item smartSVN \cite{smartsvn}
\end{itemize}

Ein Tool für Windows, welches nicht auf einer Applikation beruht, sondern in Form des Contextmenüs alle Funktionen verfügbar macht:
\begin{itemize}
 \item TortoiseSVN \cite{tortoiseSVN} 
\end{itemize}

Tool für MacOS:
\begin{itemize}
 \item versions \cite{versions} 
\end{itemize}

Ein Tool für Eclipse, welches wir benutzen werden, um den Source-Code direkt in Eclipse auschecken, bzw. updaten und committen können:
\begin{itemize}
 \item subclipse \cite{subclipse} 
\end{itemize}




