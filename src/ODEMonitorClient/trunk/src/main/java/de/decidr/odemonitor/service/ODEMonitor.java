/*
 * The DecidR Development Team licenses this file to you under
 * the Apache License, Version 2.0 (the "License"); you may
 * not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing,
 * software distributed under the License is distributed on an
 * "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY
 * KIND, either express or implied. See the License for the
 * specific language governing permissions and limitations
 * under the License.
 */

package de.decidr.odemonitor.service;

import java.net.MalformedURLException;
import java.net.URL;
import java.util.logging.Logger;
import javax.xml.namespace.QName;
import javax.xml.ws.Service;
import javax.xml.ws.WebEndpoint;
import javax.xml.ws.WebServiceClient;
import javax.xml.ws.WebServiceFeature;

import de.decidr.odemonitor.service.ODEMonitorService;

/**
 * This class was generated by the JAX-WS RI. JAX-WS RI 2.1.6 in JDK 6 Generated
 * source version: 2.1
 * 
 */
@WebServiceClient(name = "ODEMonitor", targetNamespace = "http://decidr.de/webservices/ODEMonitor", wsdlLocation = "file:/home/reini/workspaces/decidr/ODEMonitorService/META-INF/tmp/ODEMonitor.wsdl")
public class ODEMonitor extends Service {

    private final static URL ODEMONITOR_WSDL_LOCATION;
    private final static Logger logger = Logger.getLogger(ODEMonitor.class
            .getName());

    static {
        URL url = null;
        try {
            URL baseUrl;
            baseUrl = ODEMonitor.class.getResource(".");
            url = new URL(
                    baseUrl,
                    "file:/home/reini/workspaces/decidr/ODEMonitorService/META-INF/tmp/ODEMonitor.wsdl");
        } catch (MalformedURLException e) {
            logger
                    .warning("Failed to create URL for the wsdl Location: 'file:/home/reini/workspaces/decidr/ODEMonitorService/META-INF/tmp/ODEMonitor.wsdl', retrying as a local file");
            logger.warning(e.getMessage());
        }
        ODEMONITOR_WSDL_LOCATION = url;
    }

    public ODEMonitor(URL wsdlLocation, QName serviceName) {
        super(wsdlLocation, serviceName);
    }

    public ODEMonitor() {
        super(ODEMONITOR_WSDL_LOCATION, new QName(
                "http://decidr.de/webservices/ODEMonitor", "ODEMonitor"));
    }

    /**
     * 
     * @return returns ODEMonitorPT
     */
    @WebEndpoint(name = "ODEMonitorSOAP")
    public ODEMonitorService getODEMonitorSOAP() {
        return super.getPort(new QName(
                "http://decidr.de/webservices/ODEMonitor", "ODEMonitorSOAP"),
                ODEMonitorService.class);
    }

    /**
     * 
     * @param features
     *            A list of {@link javax.xml.ws.WebServiceFeature} to configure
     *            on the proxy. Supported features not in the
     *            <code>features</code> parameter will have their default
     *            values.
     * @return returns ODEMonitorPT
     */
    @WebEndpoint(name = "ODEMonitorSOAP")
    public ODEMonitorService getODEMonitorSOAP(WebServiceFeature... features) {
        return super.getPort(new QName(
                "http://decidr.de/webservices/ODEMonitor", "ODEMonitorSOAP"),
                ODEMonitorService.class, features);
    }

}
