/*
 * The DecidR Development Team licenses this file to you under
 * the Apache License, Version 2.0 (the "License"); you may
 * not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing,
 * software distributed under the License is distributed on an
 * "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY
 * KIND, either express or implied. See the License for the
 * specific language governing permissions and limitations
 * under the License.
 */

package de.decidr.ui.view.client;

import com.vaadin.terminal.gwt.client.DefaultWidgetSet;
import com.vaadin.terminal.gwt.client.Paintable;
import com.vaadin.terminal.gwt.client.UIDL;

import de.decidr.ui.view.client.ui.VModelingTool;

/**
 * This class is auto-generated by the vaadin eclipse plugin. It builds a
 * modeling tool widget for vaadin based on the GWT modeling tool widget.
 * 
 * @author AT
 */
public class MainWidgetset extends DefaultWidgetSet {

    /**
     * Creates a widget according to its class name.
     */
    @Override
    public Paintable createWidget(UIDL uidl) {
        final Class<?> classType = resolveWidgetType(uidl);

        Paintable p = createWidgetByClass(classType);
        if (p == null) {
            // Let the DefaultWidgetSet handle creation of default widgets
            p = super.createWidget(uidl);
        }

        return p;
    }

    // This method gets AUTOGENERATED by Vaadin plugin
    private Paintable createWidgetByClass(Class<?> classType) {
        if (classType == VModelingTool.class) {
            return new VModelingTool();
        } else {
            return null;
        }
    }

    // This method gets AUTOGENERATED by Vaadin plugin
    private Class<?> resolveWidgetByTag(final String tag) {
        if (VModelingTool.TAGNAME.equals(tag)) {
            return VModelingTool.class;
        } else {
            return null;
        }
    }

    /**
     * Resolves UIDL tag name to class.
     */
    @Override
    protected Class<?> resolveWidgetType(UIDL uidl) {
        final String tag = uidl.getTag();

        Class<?> c = resolveWidgetByTag(tag);

        if (c == null) {
            c = super.resolveWidgetType(uidl);
        }

        // Let the DefaultWidgetSet handle resolution of default widgets
        return c;
    }
}
