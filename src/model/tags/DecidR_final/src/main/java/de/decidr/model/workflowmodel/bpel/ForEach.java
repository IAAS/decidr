/*
 * The DecidR Development Team licenses this file to you under
 * the Apache License, Version 2.0 (the "License"); you may
 * not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing,
 * software distributed under the License is distributed on an
 * "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY
 * KIND, either express or implied. See the License for the
 * specific language governing permissions and limitations
 * under the License.
 */
//
// This file was generated by the JavaTM Architecture for XML Binding(JAXB) Reference Implementation, vJAXB 2.1.10 in JDK 6 
// See <a href="http://java.sun.com/xml/jaxb">http://java.sun.com/xml/jaxb</a> 
// Any modifications to this file will be lost upon recompilation of the source schema. 
// Generated on: 2009.11.07 at 09:21:14 PM MEZ 
//

package de.decidr.model.workflowmodel.bpel;

import javax.xml.bind.annotation.XmlAccessType;
import javax.xml.bind.annotation.XmlAccessorType;
import javax.xml.bind.annotation.XmlAttribute;
import javax.xml.bind.annotation.XmlElement;
import javax.xml.bind.annotation.XmlType;
import javax.xml.bind.annotation.adapters.CollapsedStringAdapter;
import javax.xml.bind.annotation.adapters.XmlJavaTypeAdapter;

/**
 * <p>
 * Java class for tForEach complex type.
 * 
 * <p>
 * The following schema fragment specifies the expected content contained within
 * this class.
 * 
 * <pre>
 * &lt;complexType name="tForEach">
 *   &lt;complexContent>
 *     &lt;extension base="{http://docs.oasis-open.org/wsbpel/2.0/process/executable}tActivity">
 *       &lt;sequence>
 *         &lt;element ref="{http://docs.oasis-open.org/wsbpel/2.0/process/executable}startCounterValue"/>
 *         &lt;element ref="{http://docs.oasis-open.org/wsbpel/2.0/process/executable}finalCounterValue"/>
 *         &lt;element ref="{http://docs.oasis-open.org/wsbpel/2.0/process/executable}completionCondition" minOccurs="0"/>
 *         &lt;element ref="{http://docs.oasis-open.org/wsbpel/2.0/process/executable}scope"/>
 *       &lt;/sequence>
 *       &lt;attribute name="counterName" use="required" type="{http://docs.oasis-open.org/wsbpel/2.0/process/executable}BPELVariableName" />
 *       &lt;attribute name="parallel" use="required" type="{http://docs.oasis-open.org/wsbpel/2.0/process/executable}tBoolean" />
 *       &lt;anyAttribute processContents='lax' namespace='##other'/>
 *     &lt;/extension>
 *   &lt;/complexContent>
 * &lt;/complexType>
 * </pre>
 * 
 * 
 */
@XmlAccessorType(XmlAccessType.FIELD)
@XmlType(name = "tForEach", propOrder = { "startCounterValue",
        "finalCounterValue", "completionCondition", "scope" })
public class ForEach extends Activity {

    @XmlElement(required = true)
    protected Expression startCounterValue;
    @XmlElement(required = true)
    protected Expression finalCounterValue;
    protected CompletionCondition completionCondition;
    @XmlElement(required = true)
    protected Scope scope;
    @XmlAttribute(required = true)
    @XmlJavaTypeAdapter(CollapsedStringAdapter.class)
    protected String counterName;
    @XmlAttribute(required = true)
    protected Boolean parallel;

    /**
     * Gets the value of the completionCondition property.
     * 
     * @return possible object is {@link CompletionCondition }
     * 
     */
    public CompletionCondition getCompletionCondition() {
        return completionCondition;
    }

    /**
     * Gets the value of the counterName property.
     * 
     * @return possible object is {@link String }
     * 
     */
    public String getCounterName() {
        return counterName;
    }

    /**
     * Gets the value of the finalCounterValue property.
     * 
     * @return possible object is {@link Expression }
     * 
     */
    public Expression getFinalCounterValue() {
        return finalCounterValue;
    }

    /**
     * Gets the value of the parallel property.
     * 
     * @return possible object is {@link Boolean }
     * 
     */
    public Boolean getParallel() {
        return parallel;
    }

    /**
     * Gets the value of the scope property.
     * 
     * @return possible object is {@link Scope }
     * 
     */
    public Scope getScope() {
        return scope;
    }

    /**
     * Gets the value of the startCounterValue property.
     * 
     * @return possible object is {@link Expression }
     * 
     */
    public Expression getStartCounterValue() {
        return startCounterValue;
    }

    public boolean isSetCompletionCondition() {
        return (this.completionCondition != null);
    }

    public boolean isSetCounterName() {
        return (this.counterName != null);
    }

    public boolean isSetFinalCounterValue() {
        return (this.finalCounterValue != null);
    }

    public boolean isSetParallel() {
        return (this.parallel != null);
    }

    public boolean isSetScope() {
        return (this.scope != null);
    }

    public boolean isSetStartCounterValue() {
        return (this.startCounterValue != null);
    }

    /**
     * Sets the value of the completionCondition property.
     * 
     * @param value
     *            allowed object is {@link CompletionCondition }
     * 
     */
    public void setCompletionCondition(CompletionCondition value) {
        this.completionCondition = value;
    }

    /**
     * Sets the value of the counterName property.
     * 
     * @param value
     *            allowed object is {@link String }
     * 
     */
    public void setCounterName(String value) {
        this.counterName = value;
    }

    /**
     * Sets the value of the finalCounterValue property.
     * 
     * @param value
     *            allowed object is {@link Expression }
     * 
     */
    public void setFinalCounterValue(Expression value) {
        this.finalCounterValue = value;
    }

    /**
     * Sets the value of the parallel property.
     * 
     * @param value
     *            allowed object is {@link Boolean }
     * 
     */
    public void setParallel(Boolean value) {
        this.parallel = value;
    }

    /**
     * Sets the value of the scope property.
     * 
     * @param value
     *            allowed object is {@link Scope }
     * 
     */
    public void setScope(Scope value) {
        this.scope = value;
    }

    /**
     * Sets the value of the startCounterValue property.
     * 
     * @param value
     *            allowed object is {@link Expression }
     * 
     */
    public void setStartCounterValue(Expression value) {
        this.startCounterValue = value;
    }

}
