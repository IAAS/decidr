/*
 * The DecidR Development Team licenses this file to you under
 * the Apache License, Version 2.0 (the "License"); you may
 * not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing,
 * software distributed under the License is distributed on an
 * "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY
 * KIND, either express or implied. See the License for the
 * specific language governing permissions and limitations
 * under the License.
 */
package de.decidr.model.entities;

// Generated 28.12.2009 10:39:25 by Hibernate Tools 3.2.4.GA

import java.util.Date;

/**
 * SystemSettings generated by hbm2java.
 */
public class SystemSettings implements java.io.Serializable {

    /** The Constant serialVersionUID. */
    private static final long serialVersionUID = 1L;

    /** The id. */
    private Long id;

    /** The super admin. */
    private User superAdmin;

    /** The modified date. */
    private Date modifiedDate;

    /** The auto accept new tenants. */
    private boolean autoAcceptNewTenants;

    /** The system name. */
    private String systemName;

    /** The base url. */
    private String baseUrl;

    /** The system email address. */
    private String systemEmailAddress;

    /** The log level. */
    private String logLevel;

    /** The password reset request lifetime seconds. */
    private int passwordResetRequestLifetimeSeconds;

    /** The registration request lifetime seconds. */
    private int registrationRequestLifetimeSeconds;

    /** The change email request lifetime seconds. */
    private int changeEmailRequestLifetimeSeconds;

    /** The invitation lifetime seconds. */
    private int invitationLifetimeSeconds;

    /** The mta hostname. */
    private String mtaHostname;

    /** The mta port. */
    private int mtaPort;

    /** The mta use tls. */
    private boolean mtaUseTls;

    /** The mta username. */
    private String mtaUsername;

    /** The mta password. */
    private String mtaPassword;

    /** The max upload file size bytes. */
    private long maxUploadFileSizeBytes;

    /** The max attachments per email. */
    private int maxAttachmentsPerEmail;

    /** The monitor update interval seconds. */
    private int monitorUpdateIntervalSeconds;

    /** The monitor averaging period seconds. */
    private int monitorAveragingPeriodSeconds;

    /** The server pool instances. */
    private int serverPoolInstances;

    /** The min server load for lock. */
    private byte minServerLoadForLock;

    /** The max server load for unlock. */
    private byte maxServerLoadForUnlock;

    /** The max server load for shutdown. */
    private byte maxServerLoadForShutdown;

    /** The min unlocked servers. */
    private int minUnlockedServers;

    /** The min workflow instances for lock. */
    private int minWorkflowInstancesForLock;

    /** The max workflow instances for unlock. */
    private int maxWorkflowInstancesForUnlock;

    /** The max workflow instances for shutdown. */
    private int maxWorkflowInstancesForShutdown;

    /**
     * Instantiates a new system settings.
     */
    public SystemSettings() {
        // default empty JavaBean constructor
    }

    /**
     * Instantiates a new system settings.
     * 
     * @param superAdmin
     *            the super admin
     * @param modifiedDate
     *            the modified date
     * @param autoAcceptNewTenants
     *            the auto accept new tenants
     * @param systemName
     *            the system name
     * @param baseUrl
     *            the base url
     * @param systemEmailAddress
     *            the system email address
     * @param logLevel
     *            the log level
     * @param passwordResetRequestLifetimeSeconds
     *            the password reset request lifetime seconds
     * @param registrationRequestLifetimeSeconds
     *            the registration request lifetime seconds
     * @param changeEmailRequestLifetimeSeconds
     *            the change email request lifetime seconds
     * @param invitationLifetimeSeconds
     *            the invitation lifetime seconds
     * @param mtaHostname
     *            the mta hostname
     * @param mtaPort
     *            the mta port
     * @param mtaUseTls
     *            the mta use tls
     * @param mtaUsername
     *            the mta username
     * @param mtaPassword
     *            the mta password
     * @param maxUploadFileSizeBytes
     *            the max upload file size bytes
     * @param maxAttachmentsPerEmail
     *            the max attachments per email
     * @param monitorUpdateIntervalSeconds
     *            the monitor update interval seconds
     * @param monitorAveragingPeriodSeconds
     *            the monitor averaging period seconds
     * @param serverPoolInstances
     *            the server pool instances
     * @param minServerLoadForLock
     *            the min server load for lock
     * @param maxServerLoadForUnlock
     *            the max server load for unlock
     * @param maxServerLoadForShutdown
     *            the max server load for shutdown
     * @param minUnlockedServers
     *            the min unlocked servers
     * @param minWorkflowInstancesForLock
     *            the min workflow instances for lock
     * @param maxWorkflowInstancesForUnlock
     *            the max workflow instances for unlock
     * @param maxWorkflowInstancesForShutdown
     *            the max workflow instances for shutdown
     */
    public SystemSettings(User superAdmin, Date modifiedDate,
            boolean autoAcceptNewTenants, String systemName, String baseUrl,
            String systemEmailAddress, String logLevel,
            int passwordResetRequestLifetimeSeconds,
            int registrationRequestLifetimeSeconds,
            int changeEmailRequestLifetimeSeconds,
            int invitationLifetimeSeconds, String mtaHostname, int mtaPort,
            boolean mtaUseTls, String mtaUsername, String mtaPassword,
            long maxUploadFileSizeBytes, int maxAttachmentsPerEmail,
            int monitorUpdateIntervalSeconds,
            int monitorAveragingPeriodSeconds, int serverPoolInstances,
            byte minServerLoadForLock, byte maxServerLoadForUnlock,
            byte maxServerLoadForShutdown, int minUnlockedServers,
            int minWorkflowInstancesForLock, int maxWorkflowInstancesForUnlock,
            int maxWorkflowInstancesForShutdown) {
        // generated full constructor
        this.superAdmin = superAdmin;
        this.modifiedDate = modifiedDate;
        this.autoAcceptNewTenants = autoAcceptNewTenants;
        this.systemName = systemName;
        this.baseUrl = baseUrl;
        this.systemEmailAddress = systemEmailAddress;
        this.logLevel = logLevel;
        this.passwordResetRequestLifetimeSeconds = passwordResetRequestLifetimeSeconds;
        this.registrationRequestLifetimeSeconds = registrationRequestLifetimeSeconds;
        this.changeEmailRequestLifetimeSeconds = changeEmailRequestLifetimeSeconds;
        this.invitationLifetimeSeconds = invitationLifetimeSeconds;
        this.mtaHostname = mtaHostname;
        this.mtaPort = mtaPort;
        this.mtaUseTls = mtaUseTls;
        this.mtaUsername = mtaUsername;
        this.mtaPassword = mtaPassword;
        this.maxUploadFileSizeBytes = maxUploadFileSizeBytes;
        this.maxAttachmentsPerEmail = maxAttachmentsPerEmail;
        this.monitorUpdateIntervalSeconds = monitorUpdateIntervalSeconds;
        this.monitorAveragingPeriodSeconds = monitorAveragingPeriodSeconds;
        this.serverPoolInstances = serverPoolInstances;
        this.minServerLoadForLock = minServerLoadForLock;
        this.maxServerLoadForUnlock = maxServerLoadForUnlock;
        this.maxServerLoadForShutdown = maxServerLoadForShutdown;
        this.minUnlockedServers = minUnlockedServers;
        this.minWorkflowInstancesForLock = minWorkflowInstancesForLock;
        this.maxWorkflowInstancesForUnlock = maxWorkflowInstancesForUnlock;
        this.maxWorkflowInstancesForShutdown = maxWorkflowInstancesForShutdown;
    }

    /**
     * Gets the id.
     * 
     * @return the id
     */
    public Long getId() {
        return this.id;
    }

    /**
     * Sets the id.
     * 
     * @param id
     *            the new id
     */
    public void setId(Long id) {
        this.id = id;
    }

    /**
     * Gets the super admin.
     * 
     * @return the super admin
     */
    public User getSuperAdmin() {
        return this.superAdmin;
    }

    /**
     * Sets the super admin.
     * 
     * @param superAdmin
     *            the new super admin
     */
    public void setSuperAdmin(User superAdmin) {
        this.superAdmin = superAdmin;
    }

    /**
     * Gets the modified date.
     * 
     * @return the modified date
     */
    public Date getModifiedDate() {
        return this.modifiedDate;
    }

    /**
     * Sets the modified date.
     * 
     * @param modifiedDate
     *            the new modified date
     */
    public void setModifiedDate(Date modifiedDate) {
        this.modifiedDate = modifiedDate;
    }

    /**
     * Checks if is auto accept new tenants.
     * 
     * @return true, if is auto accept new tenants
     */
    public boolean isAutoAcceptNewTenants() {
        return this.autoAcceptNewTenants;
    }

    /**
     * Sets the auto accept new tenants.
     * 
     * @param autoAcceptNewTenants
     *            the new auto accept new tenants
     */
    public void setAutoAcceptNewTenants(boolean autoAcceptNewTenants) {
        this.autoAcceptNewTenants = autoAcceptNewTenants;
    }

    /**
     * Gets the system name.
     * 
     * @return the system name
     */
    public String getSystemName() {
        return this.systemName;
    }

    /**
     * Sets the system name.
     * 
     * @param systemName
     *            the new system name
     */
    public void setSystemName(String systemName) {
        this.systemName = systemName;
    }

    /**
     * Gets the base url.
     * 
     * @return the base url
     */
    public String getBaseUrl() {
        return this.baseUrl;
    }

    /**
     * Sets the base url.
     * 
     * @param baseUrl
     *            the new base url
     */
    public void setBaseUrl(String baseUrl) {
        this.baseUrl = baseUrl;
    }

    /**
     * Gets the system email address.
     * 
     * @return the system email address
     */
    public String getSystemEmailAddress() {
        return this.systemEmailAddress;
    }

    /**
     * Sets the system email address.
     * 
     * @param systemEmailAddress
     *            the new system email address
     */
    public void setSystemEmailAddress(String systemEmailAddress) {
        this.systemEmailAddress = systemEmailAddress;
    }

    /**
     * Gets the log level.
     * 
     * @return the log level
     */
    public String getLogLevel() {
        return this.logLevel;
    }

    /**
     * Sets the log level.
     * 
     * @param logLevel
     *            the new log level
     */
    public void setLogLevel(String logLevel) {
        this.logLevel = logLevel;
    }

    /**
     * Gets the password reset request lifetime seconds.
     * 
     * @return the password reset request lifetime seconds
     */
    public int getPasswordResetRequestLifetimeSeconds() {
        return this.passwordResetRequestLifetimeSeconds;
    }

    /**
     * Sets the password reset request lifetime seconds.
     * 
     * @param passwordResetRequestLifetimeSeconds
     *            the new password reset request lifetime seconds
     */
    public void setPasswordResetRequestLifetimeSeconds(
            int passwordResetRequestLifetimeSeconds) {
        this.passwordResetRequestLifetimeSeconds = passwordResetRequestLifetimeSeconds;
    }

    /**
     * Gets the registration request lifetime seconds.
     * 
     * @return the registration request lifetime seconds
     */
    public int getRegistrationRequestLifetimeSeconds() {
        return this.registrationRequestLifetimeSeconds;
    }

    /**
     * Sets the registration request lifetime seconds.
     * 
     * @param registrationRequestLifetimeSeconds
     *            the new registration request lifetime seconds
     */
    public void setRegistrationRequestLifetimeSeconds(
            int registrationRequestLifetimeSeconds) {
        this.registrationRequestLifetimeSeconds = registrationRequestLifetimeSeconds;
    }

    /**
     * Gets the change email request lifetime seconds.
     * 
     * @return the change email request lifetime seconds
     */
    public int getChangeEmailRequestLifetimeSeconds() {
        return this.changeEmailRequestLifetimeSeconds;
    }

    /**
     * Sets the change email request lifetime seconds.
     * 
     * @param changeEmailRequestLifetimeSeconds
     *            the new change email request lifetime seconds
     */
    public void setChangeEmailRequestLifetimeSeconds(
            int changeEmailRequestLifetimeSeconds) {
        this.changeEmailRequestLifetimeSeconds = changeEmailRequestLifetimeSeconds;
    }

    /**
     * Gets the invitation lifetime seconds.
     * 
     * @return the invitation lifetime seconds
     */
    public int getInvitationLifetimeSeconds() {
        return this.invitationLifetimeSeconds;
    }

    /**
     * Sets the invitation lifetime seconds.
     * 
     * @param invitationLifetimeSeconds
     *            the new invitation lifetime seconds
     */
    public void setInvitationLifetimeSeconds(int invitationLifetimeSeconds) {
        this.invitationLifetimeSeconds = invitationLifetimeSeconds;
    }

    /**
     * Gets the mta hostname.
     * 
     * @return the mta hostname
     */
    public String getMtaHostname() {
        return this.mtaHostname;
    }

    /**
     * Sets the mta hostname.
     * 
     * @param mtaHostname
     *            the new mta hostname
     */
    public void setMtaHostname(String mtaHostname) {
        this.mtaHostname = mtaHostname;
    }

    /**
     * Gets the mta port.
     * 
     * @return the mta port
     */
    public int getMtaPort() {
        return this.mtaPort;
    }

    /**
     * Sets the mta port.
     * 
     * @param mtaPort
     *            the new mta port
     */
    public void setMtaPort(int mtaPort) {
        this.mtaPort = mtaPort;
    }

    /**
     * Checks if is mta use tls.
     * 
     * @return true, if is mta use tls
     */
    public boolean isMtaUseTls() {
        return this.mtaUseTls;
    }

    /**
     * Sets the mta use tls.
     * 
     * @param mtaUseTls
     *            the new mta use tls
     */
    public void setMtaUseTls(boolean mtaUseTls) {
        this.mtaUseTls = mtaUseTls;
    }

    /**
     * Gets the mta username.
     * 
     * @return the mta username
     */
    public String getMtaUsername() {
        return this.mtaUsername;
    }

    /**
     * Sets the mta username.
     * 
     * @param mtaUsername
     *            the new mta username
     */
    public void setMtaUsername(String mtaUsername) {
        this.mtaUsername = mtaUsername;
    }

    /**
     * Gets the mta password.
     * 
     * @return the mta password
     */
    public String getMtaPassword() {
        return this.mtaPassword;
    }

    /**
     * Sets the mta password.
     * 
     * @param mtaPassword
     *            the new mta password
     */
    public void setMtaPassword(String mtaPassword) {
        this.mtaPassword = mtaPassword;
    }

    /**
     * Gets the max upload file size bytes.
     * 
     * @return the max upload file size bytes
     */
    public long getMaxUploadFileSizeBytes() {
        return this.maxUploadFileSizeBytes;
    }

    /**
     * Sets the max upload file size bytes.
     * 
     * @param maxUploadFileSizeBytes
     *            the new max upload file size bytes
     */
    public void setMaxUploadFileSizeBytes(long maxUploadFileSizeBytes) {
        this.maxUploadFileSizeBytes = maxUploadFileSizeBytes;
    }

    /**
     * Gets the max attachments per email.
     * 
     * @return the max attachments per email
     */
    public int getMaxAttachmentsPerEmail() {
        return this.maxAttachmentsPerEmail;
    }

    /**
     * Sets the max attachments per email.
     * 
     * @param maxAttachmentsPerEmail
     *            the new max attachments per email
     */
    public void setMaxAttachmentsPerEmail(int maxAttachmentsPerEmail) {
        this.maxAttachmentsPerEmail = maxAttachmentsPerEmail;
    }

    /**
     * Gets the monitor update interval seconds.
     * 
     * @return the monitor update interval seconds
     */
    public int getMonitorUpdateIntervalSeconds() {
        return this.monitorUpdateIntervalSeconds;
    }

    /**
     * Sets the monitor update interval seconds.
     * 
     * @param monitorUpdateIntervalSeconds
     *            the new monitor update interval seconds
     */
    public void setMonitorUpdateIntervalSeconds(int monitorUpdateIntervalSeconds) {
        this.monitorUpdateIntervalSeconds = monitorUpdateIntervalSeconds;
    }

    /**
     * Gets the monitor averaging period seconds.
     * 
     * @return the monitor averaging period seconds
     */
    public int getMonitorAveragingPeriodSeconds() {
        return this.monitorAveragingPeriodSeconds;
    }

    /**
     * Sets the monitor averaging period seconds.
     * 
     * @param monitorAveragingPeriodSeconds
     *            the new monitor averaging period seconds
     */
    public void setMonitorAveragingPeriodSeconds(
            int monitorAveragingPeriodSeconds) {
        this.monitorAveragingPeriodSeconds = monitorAveragingPeriodSeconds;
    }

    /**
     * Gets the server pool instances.
     * 
     * @return the server pool instances
     */
    public int getServerPoolInstances() {
        return this.serverPoolInstances;
    }

    /**
     * Sets the server pool instances.
     * 
     * @param serverPoolInstances
     *            the new server pool instances
     */
    public void setServerPoolInstances(int serverPoolInstances) {
        this.serverPoolInstances = serverPoolInstances;
    }

    /**
     * Gets the min server load for lock.
     * 
     * @return the min server load for lock
     */
    public byte getMinServerLoadForLock() {
        return this.minServerLoadForLock;
    }

    /**
     * Sets the min server load for lock.
     * 
     * @param minServerLoadForLock
     *            the new min server load for lock
     */
    public void setMinServerLoadForLock(byte minServerLoadForLock) {
        this.minServerLoadForLock = minServerLoadForLock;
    }

    /**
     * Gets the max server load for unlock.
     * 
     * @return the max server load for unlock
     */
    public byte getMaxServerLoadForUnlock() {
        return this.maxServerLoadForUnlock;
    }

    /**
     * Sets the max server load for unlock.
     * 
     * @param maxServerLoadForUnlock
     *            the new max server load for unlock
     */
    public void setMaxServerLoadForUnlock(byte maxServerLoadForUnlock) {
        this.maxServerLoadForUnlock = maxServerLoadForUnlock;
    }

    /**
     * Gets the max server load for shutdown.
     * 
     * @return the max server load for shutdown
     */
    public byte getMaxServerLoadForShutdown() {
        return this.maxServerLoadForShutdown;
    }

    /**
     * Sets the max server load for shutdown.
     * 
     * @param maxServerLoadForShutdown
     *            the new max server load for shutdown
     */
    public void setMaxServerLoadForShutdown(byte maxServerLoadForShutdown) {
        this.maxServerLoadForShutdown = maxServerLoadForShutdown;
    }

    /**
     * Gets the min unlocked servers.
     * 
     * @return the min unlocked servers
     */
    public int getMinUnlockedServers() {
        return this.minUnlockedServers;
    }

    /**
     * Sets the min unlocked servers.
     * 
     * @param minUnlockedServers
     *            the new min unlocked servers
     */
    public void setMinUnlockedServers(int minUnlockedServers) {
        this.minUnlockedServers = minUnlockedServers;
    }

    /**
     * Gets the min workflow instances for lock.
     * 
     * @return the min workflow instances for lock
     */
    public int getMinWorkflowInstancesForLock() {
        return this.minWorkflowInstancesForLock;
    }

    /**
     * Sets the min workflow instances for lock.
     * 
     * @param minWorkflowInstancesForLock
     *            the new min workflow instances for lock
     */
    public void setMinWorkflowInstancesForLock(int minWorkflowInstancesForLock) {
        this.minWorkflowInstancesForLock = minWorkflowInstancesForLock;
    }

    /**
     * Gets the max workflow instances for unlock.
     * 
     * @return the max workflow instances for unlock
     */
    public int getMaxWorkflowInstancesForUnlock() {
        return this.maxWorkflowInstancesForUnlock;
    }

    /**
     * Sets the max workflow instances for unlock.
     * 
     * @param maxWorkflowInstancesForUnlock
     *            the new max workflow instances for unlock
     */
    public void setMaxWorkflowInstancesForUnlock(
            int maxWorkflowInstancesForUnlock) {
        this.maxWorkflowInstancesForUnlock = maxWorkflowInstancesForUnlock;
    }

    /**
     * Gets the max workflow instances for shutdown.
     * 
     * @return the max workflow instances for shutdown
     */
    public int getMaxWorkflowInstancesForShutdown() {
        return this.maxWorkflowInstancesForShutdown;
    }

    /**
     * Sets the max workflow instances for shutdown.
     * 
     * @param maxWorkflowInstancesForShutdown
     *            the new max workflow instances for shutdown
     */
    public void setMaxWorkflowInstancesForShutdown(
            int maxWorkflowInstancesForShutdown) {
        this.maxWorkflowInstancesForShutdown = maxWorkflowInstancesForShutdown;
    }

}
