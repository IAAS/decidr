/*
 * The DecidR Development Team licenses this file to you under
 * the Apache License, Version 2.0 (the "License"); you may
 * not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing,
 * software distributed under the License is distributed on an
 * "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY
 * KIND, either express or implied. See the License for the
 * specific language governing permissions and limitations
 * under the License.
 */
package de.decidr.model.entities;

// Generated 28.12.2009 10:39:25 by Hibernate Tools 3.2.4.GA

/**
 * Session generated by hbm2java.
 */
public class Session implements java.io.Serializable {

    /** The Constant serialVersionUID. */
    private static final long serialVersionUID = 1L;

    /** The session id. */
    private String sessionId;

    /** The app. */
    private String app;

    /** The data. */
    private byte[] data;

    /** The last accessed. */
    private long lastAccessed;

    /** The max inactive. */
    private int maxInactive;

    /** The valid. */
    private boolean valid;

    /**
     * Instantiates a new session.
     */
    public Session() {
        // default empty JavaBean constructor
    }

    /**
     * Instantiates a new session.
     * 
     * @param sessionId
     *            the session id
     * @param lastAccessed
     *            the last accessed
     * @param maxInactive
     *            the max inactive
     * @param valid
     *            the valid
     */
    public Session(String sessionId, long lastAccessed, int maxInactive,
            boolean valid) {
        // generated minimal constructor
        this.sessionId = sessionId;
        this.lastAccessed = lastAccessed;
        this.maxInactive = maxInactive;
        this.valid = valid;
    }

    /**
     * Instantiates a new session.
     * 
     * @param sessionId
     *            the session id
     * @param app
     *            the app
     * @param data
     *            the data
     * @param lastAccessed
     *            the last accessed
     * @param maxInactive
     *            the max inactive
     * @param valid
     *            the valid
     */
    public Session(String sessionId, String app, byte[] data,
            long lastAccessed, int maxInactive, boolean valid) {
        // generated full constructor
        this.sessionId = sessionId;
        this.app = app;
        this.data = data;
        this.lastAccessed = lastAccessed;
        this.maxInactive = maxInactive;
        this.valid = valid;
    }

    /**
     * Gets the session id.
     * 
     * @return the session id
     */
    public String getSessionId() {
        return this.sessionId;
    }

    /**
     * Sets the session id.
     * 
     * @param sessionId
     *            the new session id
     */
    public void setSessionId(String sessionId) {
        this.sessionId = sessionId;
    }

    /**
     * Gets the app.
     * 
     * @return the app
     */
    public String getApp() {
        return this.app;
    }

    /**
     * Sets the app.
     * 
     * @param app
     *            the new app
     */
    public void setApp(String app) {
        this.app = app;
    }

    /**
     * Gets the data.
     * 
     * @return the data
     */
    public byte[] getData() {
        return this.data;
    }

    /**
     * Sets the data.
     * 
     * @param data
     *            the new data
     */
    public void setData(byte[] data) {
        this.data = data;
    }

    /**
     * Gets the last accessed.
     * 
     * @return the last accessed
     */
    public long getLastAccessed() {
        return this.lastAccessed;
    }

    /**
     * Sets the last accessed.
     * 
     * @param lastAccessed
     *            the new last accessed
     */
    public void setLastAccessed(long lastAccessed) {
        this.lastAccessed = lastAccessed;
    }

    /**
     * Gets the max inactive.
     * 
     * @return the max inactive
     */
    public int getMaxInactive() {
        return this.maxInactive;
    }

    /**
     * Sets the max inactive.
     * 
     * @param maxInactive
     *            the new max inactive
     */
    public void setMaxInactive(int maxInactive) {
        this.maxInactive = maxInactive;
    }

    /**
     * Checks if is valid.
     * 
     * @return true, if is valid
     */
    public boolean isValid() {
        return this.valid;
    }

    /**
     * Sets the valid.
     * 
     * @param valid
     *            the new valid
     */
    public void setValid(boolean valid) {
        this.valid = valid;
    }

}
