/*
 * The DecidR Development Team licenses this file to you under
 * the Apache License, Version 2.0 (the "License"); you may
 * not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing,
 * software distributed under the License is distributed on an
 * "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY
 * KIND, either express or implied. See the License for the
 * specific language governing permissions and limitations
 * under the License.
 */
package de.decidr.model.entities;

// Generated 22.01.2010 14:51:15 by Hibernate Tools 3.2.4.GA

import java.util.Date;
import java.util.HashSet;
import java.util.Set;

/**
 * WorkflowInstance generated by hbm2java.
 */
public class WorkflowInstance implements java.io.Serializable {

    /** The Constant serialVersionUID. */
    private static final long serialVersionUID = 1L;

    /** The id. */
    private Long id;

    /** The deployed workflow model. */
    private DeployedWorkflowModel deployedWorkflowModel;

    /** The server. */
    private Server server;

    /** The ode pid. */
    private String odePid;

    /** The start configuration. */
    private byte[] startConfiguration;

    /** The started date. */
    private Date startedDate;

    /** The completed date. */
    private Date completedDate;

    /** The work items. */
    private Set<WorkItem> workItems = new HashSet<WorkItem>(0);

    /** The user administrates workflow instances. */
    private Set<UserAdministratesWorkflowInstance> userAdministratesWorkflowInstances = new HashSet<UserAdministratesWorkflowInstance>(
            0);

    /** The invitations. */
    private Set<Invitation> invitations = new HashSet<Invitation>(0);

    /** The user participates in workflows. */
    private Set<UserParticipatesInWorkflow> userParticipatesInWorkflows = new HashSet<UserParticipatesInWorkflow>(
            0);

    /**
     * Instantiates a new workflow instance.
     */
    public WorkflowInstance() {
        // default empty JavaBean constructor
    }

    /**
     * Instantiates a new workflow instance.
     * 
     * @param deployedWorkflowModel
     *            the deployed workflow model
     * @param server
     *            the server
     * @param odePid
     *            the ode pid
     * @param startConfiguration
     *            the start configuration
     * @param startedDate
     *            the started date
     * @param completedDate
     *            the completed date
     * @param workItems
     *            the work items
     * @param userAdministratesWorkflowInstances
     *            the user administrates workflow instances
     * @param invitations
     *            the invitations
     * @param userParticipatesInWorkflows
     *            the user participates in workflows
     */
    public WorkflowInstance(
            DeployedWorkflowModel deployedWorkflowModel,
            Server server,
            String odePid,
            byte[] startConfiguration,
            Date startedDate,
            Date completedDate,
            Set<WorkItem> workItems,
            Set<UserAdministratesWorkflowInstance> userAdministratesWorkflowInstances,
            Set<Invitation> invitations,
            Set<UserParticipatesInWorkflow> userParticipatesInWorkflows) {
        // generated full constructor
        this.deployedWorkflowModel = deployedWorkflowModel;
        this.server = server;
        this.odePid = odePid;
        this.startConfiguration = startConfiguration;
        this.startedDate = startedDate;
        this.completedDate = completedDate;
        this.workItems = workItems;
        this.userAdministratesWorkflowInstances = userAdministratesWorkflowInstances;
        this.invitations = invitations;
        this.userParticipatesInWorkflows = userParticipatesInWorkflows;
    }

    /**
     * Instantiates a new workflow instance.
     * 
     * @param deployedWorkflowModel
     *            the deployed workflow model
     * @param odePid
     *            the ode pid
     * @param startConfiguration
     *            the start configuration
     */
    public WorkflowInstance(DeployedWorkflowModel deployedWorkflowModel,
            String odePid, byte[] startConfiguration) {
        // generated minimal constructor
        this.deployedWorkflowModel = deployedWorkflowModel;
        this.odePid = odePid;
        this.startConfiguration = startConfiguration;
    }

    /**
     * Gets the completed date.
     * 
     * @return the completed date
     */
    public Date getCompletedDate() {
        return this.completedDate;
    }

    /**
     * Gets the deployed workflow model.
     * 
     * @return the deployed workflow model
     */
    public DeployedWorkflowModel getDeployedWorkflowModel() {
        return this.deployedWorkflowModel;
    }

    /**
     * Gets the id.
     * 
     * @return the id
     */
    public Long getId() {
        return this.id;
    }

    /**
     * Gets the invitations.
     * 
     * @return the invitations
     */
    public Set<Invitation> getInvitations() {
        return this.invitations;
    }

    /**
     * Gets the ode pid.
     * 
     * @return the ode pid
     */
    public String getOdePid() {
        return this.odePid;
    }

    /**
     * Gets the server.
     * 
     * @return the server
     */
    public Server getServer() {
        return this.server;
    }

    /**
     * Gets the start configuration.
     * 
     * @return the start configuration
     */
    public byte[] getStartConfiguration() {
        return this.startConfiguration;
    }

    /**
     * Gets the started date.
     * 
     * @return the started date
     */
    public Date getStartedDate() {
        return this.startedDate;
    }

    /**
     * Gets the user administrates workflow instances.
     * 
     * @return the user administrates workflow instances
     */
    public Set<UserAdministratesWorkflowInstance> getUserAdministratesWorkflowInstances() {
        return this.userAdministratesWorkflowInstances;
    }

    /**
     * Gets the user participates in workflows.
     * 
     * @return the user participates in workflows
     */
    public Set<UserParticipatesInWorkflow> getUserParticipatesInWorkflows() {
        return this.userParticipatesInWorkflows;
    }

    /**
     * Gets the work items.
     * 
     * @return the work items
     */
    public Set<WorkItem> getWorkItems() {
        return this.workItems;
    }

    /**
     * Sets the completed date.
     * 
     * @param completedDate
     *            the new completed date
     */
    public void setCompletedDate(Date completedDate) {
        this.completedDate = completedDate;
    }

    /**
     * Sets the deployed workflow model.
     * 
     * @param deployedWorkflowModel
     *            the new deployed workflow model
     */
    public void setDeployedWorkflowModel(
            DeployedWorkflowModel deployedWorkflowModel) {
        this.deployedWorkflowModel = deployedWorkflowModel;
    }

    /**
     * Sets the id.
     * 
     * @param id
     *            the new id
     */
    public void setId(Long id) {
        this.id = id;
    }

    /**
     * Sets the invitations.
     * 
     * @param invitations
     *            the new invitations
     */
    public void setInvitations(Set<Invitation> invitations) {
        this.invitations = invitations;
    }

    /**
     * Sets the ode pid.
     * 
     * @param odePid
     *            the new ode pid
     */
    public void setOdePid(String odePid) {
        this.odePid = odePid;
    }

    /**
     * Sets the server.
     * 
     * @param server
     *            the new server
     */
    public void setServer(Server server) {
        this.server = server;
    }

    /**
     * Sets the start configuration.
     * 
     * @param startConfiguration
     *            the new start configuration
     */
    public void setStartConfiguration(byte[] startConfiguration) {
        this.startConfiguration = startConfiguration;
    }

    /**
     * Sets the started date.
     * 
     * @param startedDate
     *            the new started date
     */
    public void setStartedDate(Date startedDate) {
        this.startedDate = startedDate;
    }

    /**
     * Sets the user administrates workflow instances.
     * 
     * @param userAdministratesWorkflowInstances
     *            the new user administrates workflow instances
     */
    public void setUserAdministratesWorkflowInstances(
            Set<UserAdministratesWorkflowInstance> userAdministratesWorkflowInstances) {
        this.userAdministratesWorkflowInstances = userAdministratesWorkflowInstances;
    }

    /**
     * Sets the user participates in workflows.
     * 
     * @param userParticipatesInWorkflows
     *            the new user participates in workflows
     */
    public void setUserParticipatesInWorkflows(
            Set<UserParticipatesInWorkflow> userParticipatesInWorkflows) {
        this.userParticipatesInWorkflows = userParticipatesInWorkflows;
    }

    /**
     * Sets the work items.
     * 
     * @param workItems
     *            the new work items
     */
    public void setWorkItems(Set<WorkItem> workItems) {
        this.workItems = workItems;
    }

}
