//
// This file was generated by the JavaTM Architecture for XML Binding(JAXB) Reference Implementation, vJAXB 2.1.10 in JDK 6 
// See <a href="http://java.sun.com/xml/jaxb">http://java.sun.com/xml/jaxb</a> 
// Any modifications to this file will be lost upon recompilation of the source schema. 
// Generated on: 2009.11.07 at 09:21:14 PM MEZ 
//


package de.decidr.model.workflowmodel.bpel;

import java.util.ArrayList;
import java.util.List;
import javax.xml.bind.annotation.XmlAccessType;
import javax.xml.bind.annotation.XmlAccessorType;
import javax.xml.bind.annotation.XmlElement;
import javax.xml.bind.annotation.XmlElements;
import javax.xml.bind.annotation.XmlType;


/**
 * <p>Java class for tSequence complex type.
 * 
 * <p>The following schema fragment specifies the expected content contained within this class.
 * 
 * <pre>
 * &lt;complexType name="tSequence">
 *   &lt;complexContent>
 *     &lt;extension base="{http://docs.oasis-open.org/wsbpel/2.0/process/executable}tActivity">
 *       &lt;sequence>
 *         &lt;group ref="{http://docs.oasis-open.org/wsbpel/2.0/process/executable}activity" maxOccurs="unbounded"/>
 *       &lt;/sequence>
 *       &lt;anyAttribute processContents='lax' namespace='##other'/>
 *     &lt;/extension>
 *   &lt;/complexContent>
 * &lt;/complexType>
 * </pre>
 * 
 * 
 */
@XmlAccessorType(XmlAccessType.FIELD)
@XmlType(name = "tSequence", propOrder = {
    "activity"
})
public class Sequence
    extends Activity
{

    @XmlElements({
        @XmlElement(name = "while", type = While.class),
        @XmlElement(name = "sequence", type = Sequence.class),
        @XmlElement(name = "reply", type = Reply.class),
        @XmlElement(name = "if", type = If.class),
        @XmlElement(name = "forEach", type = ForEach.class),
        @XmlElement(name = "exit", type = Exit.class),
        @XmlElement(name = "assign", type = Assign.class),
        @XmlElement(name = "wait", type = Wait.class),
        @XmlElement(name = "flow", type = Flow.class),
        @XmlElement(name = "pick", type = Pick.class),
        @XmlElement(name = "compensateScope", type = CompensateScope.class),
        @XmlElement(name = "receive", type = Receive.class),
        @XmlElement(name = "empty", type = Empty.class),
        @XmlElement(name = "repeatUntil", type = RepeatUntil.class),
        @XmlElement(name = "compensate", type = Compensate.class),
        @XmlElement(name = "validate", type = Validate.class),
        @XmlElement(name = "throw", type = Throw.class),
        @XmlElement(name = "scope", type = Scope.class),
        @XmlElement(name = "extensionActivity", type = ExtensionActivity.class),
        @XmlElement(name = "invoke", type = Invoke.class),
        @XmlElement(name = "rethrow", type = Rethrow.class)
    })
    protected List<Object> activity;

    /**
     * Gets the value of the activity property.
     * 
     * <p>
     * This accessor method returns a reference to the live list,
     * not a snapshot. Therefore any modification you make to the
     * returned list will be present inside the JAXB object.
     * This is why there is not a <CODE>set</CODE> method for the activity property.
     * 
     * <p>
     * For example, to add a new item, do as follows:
     * <pre>
     *    getActivity().add(newItem);
     * </pre>
     * 
     * 
     * <p>
     * Objects of the following type(s) are allowed in the list
     * {@link While }
     * {@link Sequence }
     * {@link Reply }
     * {@link If }
     * {@link ForEach }
     * {@link Exit }
     * {@link Assign }
     * {@link Wait }
     * {@link Flow }
     * {@link Pick }
     * {@link CompensateScope }
     * {@link Receive }
     * {@link Empty }
     * {@link RepeatUntil }
     * {@link Compensate }
     * {@link Validate }
     * {@link Throw }
     * {@link Scope }
     * {@link ExtensionActivity }
     * {@link Invoke }
     * {@link Rethrow }
     * 
     * 
     */
    public List<Object> getActivity() {
        if (activity == null) {
            activity = new ArrayList<Object>();
        }
        return this.activity;
    }

    public boolean isSetActivity() {
        return ((this.activity!= null)&&(!this.activity.isEmpty()));
    }

    public void unsetActivity() {
        this.activity = null;
    }

}
